<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lagou.dao.RoleMapper">

    <resultMap id="resourceCategoryResult" type="com.lagou.domain.ResourceCategory">
        <id property="id" column="id"></id>
        <result property="name" column="name"></result>
    </resultMap>

    <!-- 查询所有角色&根据条件进行查询 -->
    <select id="findAllRole" parameterType="com.lagou.domain.Role" resultType="com.lagou.domain.Role">
        select * from roles
        <where>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
        </where>
    </select>

    <!-- 添加角色 -->
    <insert id="saveRole" parameterType="com.lagou.domain.Role">
        insert into roles values(null,#{code},#{name},#{description},#{createdTime},#{updatedTime},#{createdBy},#{updatedBy})
    </insert>

    <!-- 修改角色 public void updateRole(Role role); -->
    <update id="updateRole" parameterType="com.lagou.domain.Role">
        update roles
        <trim prefix="set" suffixOverrides=",">

            <if test="code != null and code != ''">
                code = #{code},
            </if>

            <if test="name != null and name != ''">
                name = #{name},
            </if>

            <if test="description != null and description != ''">
                description = #{description},
            </if>

            <if test="createdTime != null">
                created_time = #{createdTime},
            </if>

            <if test="updatedTime != null">
                updated_time = #{updatedTime},
            </if>

            <if test="createdBy != null and createdBy != ''">
                created_by = #{createdBy},
            </if>

            <if test="updatedBy != null and updatedBy != ''">
                updated_by = #{updatedBy},
            </if>

        </trim>
        <where>
            <if test="id != null and id != ''">
                id = #{id}
            </if>
        </where>
    </update>

    <!-- 根据角色ID查询该角色关联的菜单信息ID -->
    <select id="findMenuByRoleId" parameterType="int" resultType="int">
        SELECT m.id
        FROM roles r INNER JOIN role_menu_relation rm ON r.id = rm.role_id
                     INNER JOIN menu m ON m.id = rm.menu_id WHERE r.id = #{id}
    </select>

    <!-- 根据roleId清空中间表与菜单的关联关系 -->
    <delete id="deleteRoleContextMenu" parameterType="int">
        delete from role_menu_relation where role_id = #{rid}
    </delete>

    <!-- 为角色分配菜单信息 -->
    <insert id="RoleContextMenu" parameterType="com.lagou.domain.Role_menu_relation">
        insert into role_menu_relation values(null,#{menuId},#{roleId},#{createdTime},#{updatedTime},#{createdBy},#{updatedby})
    </insert>

    <!-- 删除角色 -->
    <delete id="deleteRole" parameterType="int">
        delete from roles where id = #{roleId}
    </delete>

    <!-- 查询当前角色拥有的资源分类数据 -->
    <select id="findResourceCategoryByRoleId" parameterType="int" resultMap="resourceCategoryResult">
        SELECT
            rc.id,
            rc.name
        FROM resource_category	rc LEFT JOIN resource r ON rc.id = r.category_id
                                     LEFT JOIN role_resource_relation rrr ON r.id = rrr.resource_id LEFT JOIN
             roles rs ON rrr.role_id = rs.id WHERE rs.id = #{roleId} GROUP BY rc.id;
    </select>

    <!-- 通过角色ID查询资源数据 -->
    <select id="findResourceByRoleId" parameterType="int" resultType="com.lagou.domain.Resource">
        SELECT
            rs.`id`,
            rs.`name`,
            rs.`category_id`
        FROM roles r LEFT JOIN role_resource_relation rrr ON r.`id` = rrr.`role_id`
                     LEFT JOIN resource rs ON rrr.`resource_id` = rs.`id` WHERE r.id = #{roleId};
    </select>

    <!-- 根据角色ID 删除角色与资源的关联关系 -->
    <delete id="deleteRoleContextResource" parameterType="int">
        delete from role_resource_relation where role_id = #{roleId}
    </delete>

    <!-- 为角色分配资源（插入数据） -->
    <insert id="roleContextResource" parameterType="com.lagou.domain.Role_resource_relation">
        insert into role_resource_relation values(null,#{resourceId},#{roleId},#{createdTime},#{updatedTime},#{createdBy},#{updatedBy})
    </insert>

</mapper>