<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lagou.dao.RoleMapper">
    <select id="findAllRole" parameterType="com.lagou.domain.Role" resultType="com.lagou.domain.Role">
        select * from roles
<where>
    <if test="name!=null and name!=''">
        and name = #{name}
    </if>
</where>
    </select>


<!--    //根据角色id查询该角色关联的菜单信息id
    public List<Integer> findMenuRoleId(Integer roleid);-->
    <select id="findMenuRoleId" resultMap="int" parameterType="int">
        select m.id  from roles r inner join role_menu_relation rmr on r.id = rmr.role_id inner join menu m on rmr.menu_id = m.id = #{id}
    </select>


<!--    //根绝roleid 清空中间表的关联关系
    public void deleteRoleContextMenu(Integer rid);

    //为角色分配菜单信息
    public void roleContextMenu(Role_menu_relation role_menu_relation);-->
    <delete id="deleteRoleContextMenu" parameterType="int">
        delete  from role_menu_relation where role_id = #{rid}
    </delete>

    <insert id="roleContextMenu" parameterType="com.lagou.domain.Role_menu_relation">
        insert into role_menu_relation values (null,#{menuId},#{roleId},#{createdTime},#{updateTime},#{createdBy},#{updatedby})
    </insert>

<!--    删除角色-->
    <delete id="deleteRole" parameterType="int">
        delete from roles where id = #{roleid}
    </delete>



<!--  更新部分-->
    <!-- 查询当前角色拥有的资源分类信息Id public List<Integer> findResourceCategoryByRoleId(Integer roleId);-->
    <select id="findResourceCategoryByRoleId" parameterType="int" resultType="int">
        select  distinct category_id from resource where id in (
            select resource_id from role_resource_relation where role_id = #{roleId})
    </select>


    <!--     * 查询当前角色拥有的资源分类下的资源信息    public List<Resource> findResourceByResourceCategoryId(int resourceCategoryId) -->
    <select id = "findResourceByResourceCategoryId" resultType="com.lagou.domain.Resource"  parameterType="com.lagou.domain.ResourceCategoryVO">
        select distinct r.* from resource r inner join role_resource_relation rr on r.id = rr.resource_id
        where r.category_id = #{id} and r.id in
        <foreach collection="list" open="(" separator="," close=")" item="item">
            #{item}
        </foreach>
    </select>

    <!--     根据资源分类id查找资源分类的信息 public ResourceCategory findResourceCategoryById(int id);-->
    <select id="findResourceCategoryById" resultType="com.lagou.domain.ResourceCategory" parameterType="int">
        select * from resource_category where id = #{id}
    </select>


    <!--     根据角色ID查询对应的资源信息 public List<Integer> findResourceByRoleId(Integer roleId);-->
    <select id="findResourceByRoleId" parameterType="int" resultType="int">
        SELECT resource_id FROM role_resource_relation WHERE  role_id = #{roleId}
    </select>



    <!--     根据roleid 清空 角色与资源 的关联关系 public void deleteRoleContextResource(Integer roleId);-->
    <delete id="deleteRoleContextResource" parameterType="int">
        delete from role_resource_relation where role_id = #{id}
    </delete>

    <!--     为角色分配资源信息 public void roleContextResource(RoleResourceRelation resourceRelation);-->
    <insert id="roleContextResource" parameterType="com.lagou.domain.RoleResourceRelation">
        insert into role_resource_relation values (null,#{resourceId},#{roleId},#{createdTime},#{updatedTime},#{createdBy},#{updatedBy})
    </insert>
</mapper>